{"ast":null,"code":"var _jsxFileName = \"/Users/peta/Documents/GitHub/material-kit-react/src/views/reports/DashboardView/TrafficByDevice.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Card, CardHeader, Divider, makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%',\n    with: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles(); // const theme = useTheme();\n\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleChange1 = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleChange2 = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleChange3 = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleChange4 = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleChange5 = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleChange6 = event => {\n    setChecked(event.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: handleChange,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: handleChange,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: handleChange1,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: handleChange2,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleChange3,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleChange4,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleChange5,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleChange6,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(TrafficByDevice, \"kk/cN5/LxShYtioAzfNg1QPS6v8=\", false, function () {\n  return [useStyles];\n});\n\n_c = TrafficByDevice;\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\nexport default TrafficByDevice;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficByDevice\");","map":{"version":3,"sources":["/Users/peta/Documents/GitHub/material-kit-react/src/views/reports/DashboardView/TrafficByDevice.js"],"names":["React","clsx","PropTypes","Checkbox","Card","CardHeader","Divider","makeStyles","useStyles","root","height","with","TrafficByDevice","className","rest","classes","checked","setChecked","useState","handleChange","event","target","handleChange1","handleChange2","handleChange3","handleChange4","handleChange5","handleChange6","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%',\n    with: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  // const theme = useTheme();\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n  const handleChange1 = (event) => {\n    setChecked(event.target.checked);\n  };\n  const handleChange2 = (event) => {\n    setChecked(event.target.checked);\n  };\n  const handleChange3 = (event) => {\n    setChecked(event.target.checked);\n  };\n  const handleChange4 = (event) => {\n    setChecked(event.target.checked);\n  };\n  const handleChange5 = (event) => {\n    setChecked(event.target.checked);\n  };\n  const handleChange6 = (event) => {\n    setChecked(event.target.checked);\n  };\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Inbox\" />\n      <Checkbox\n        onChange={handleChange}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Checkbox onChange={handleChange} inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Checkbox onChange={handleChange1} inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Checkbox onChange={handleChange2} inputProps={{ 'aria-label': 'primary checkbox' }} />\n\n      <Checkbox checked={checked} onChange={handleChange3} inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Checkbox checked={checked} onChange={handleChange4} inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Checkbox checked={checked} onChange={handleChange5} inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Checkbox checked={checked} onChange={handleChange6} inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Divider />\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n"]},"metadata":{},"sourceType":"module"}