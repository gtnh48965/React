{"ast":null,"code":"var _jsxFileName = \"/Users/peta/Documents/GitHub/material-kit-react/src/views/settings/SettingsView/Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Card, CardContent // CardHeader,\n, Divider, Grid, makeStyles // TextField,\n} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst useStyles = makeStyles({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\nconst colorIcon = {\n  background: '#DADADA'\n};\nconst ColrText = {\n  color: '#8C8C8C'\n};\nconst widthBigtext = {\n  width: '200px'\n};\nconst blackText = {\n  color: '#404040'\n};\nconst botNan = {\n  borderRadius: 'initial'\n};\n\nconst Notifications = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    wrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    style: widthBigtext,\n    margin: \"normal\",\n    defaultValue: \"MyFirstProject\",\n    color: \"primary\",\n    inputProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BorderColorIcon, {\n    style: colorIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DeleteIcon, {\n    style: colorIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 9,\n    sm: 9,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    root: true,\n    md: 10,\n    sm: 10,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: ColrText,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, \"TODI\"), /*#__PURE__*/React.createElement(Box, {\n    mt: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: blackText,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"No task\"))))), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 3,\n    sm: 3,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mb: 1,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    style: botNan,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Clear not completed\"))), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 9,\n    sm: 9,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: ColrText,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, \"COMPLETED\"), /*#__PURE__*/React.createElement(Box, {\n    mt: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: blackText,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"No task\"))))), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 3,\n    sm: 3,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    mb: 4,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    style: botNan,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Clear not completed\"))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Notifications, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Notifications;\nNotifications.propTypes = {\n  className: PropTypes.string\n};\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["/Users/peta/Documents/GitHub/material-kit-react/src/views/settings/SettingsView/Notifications.js"],"names":["React","PropTypes","clsx","Box","Button","Card","CardContent","Divider","Grid","makeStyles","Typography","InputBase","BorderColorIcon","DeleteIcon","useStyles","root","item","display","flexDirection","colorIcon","background","ColrText","color","widthBigtext","width","blackText","botNan","borderRadius","Notifications","className","rest","classes","style","fontSize","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,CAKE;AALF,EAMEC,OANF,EAOEC,IAPF,EAQEC,UARF,CASE;AATF,OAUO,mBAVP;AAWA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAE;AAC5BM,EAAAA,IAAI,EAAE,EADsB;AAE5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE;AAFX;AAFsB,CAAF,CAA5B;AAQA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AADI,CAAlB;AAGA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAjB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,MAAMC,SAAS,GAAG;AAChBH,EAAAA,KAAK,EAAE;AADS,CAAlB;AAGA,MAAMI,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE;AADD,CAAf;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AAAA;;AAChD,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AAEA,sBACE;AACE,IAAA,SAAS,EAAEZ,IAAI,CAAC6B,OAAO,CAAChB,IAAT,EAAec,SAAf;AADjB,KAEMC,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEC,OAAO,CAACf,IADrB;AAEE,IAAA,IAAI,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEO,YADT;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,YAAY,EAAC,gBAHf;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,UAAU,EACN;AACES,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL;AADT,KANN;AAYE,IAAA,eAAe,EACX;AACED,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL;AADT,KAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CALF,eA+BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEd,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CA/BF,eAqCE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEY,OAAO,CAACf,IAAzB;AAA+B,IAAA,IAAI,MAAnC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAA2C,IAAA,EAAE,EAAE,CAA/C;AAAkD,IAAA,EAAE,EAAE,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,MAAT;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAEK,QAAhC;AAA0C,IAAA,KAAK,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAEI,SAAhC;AAA2C,IAAA,KAAK,EAAC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAFF,CADF,CADF,CArCF,eA+CE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEM,OAAO,CAACf,IAAzB;AAA+B,IAAA,IAAI,MAAnC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAA2C,IAAA,EAAE,EAAE,CAA/C;AAAkD,IAAA,EAAE,EAAE,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,cAAc,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAEU,MAAlC;AAA0C,IAAA,QAAQ,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CA/CF,eAsDE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEK,OAAO,CAACf,IAAzB;AAA+B,IAAA,IAAI,MAAnC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAA2C,IAAA,EAAE,EAAE,CAA/C;AAAkD,IAAA,EAAE,EAAE,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAEK,QAAhC;AAA0C,IAAA,KAAK,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAEI,SAAhC;AAA2C,IAAA,KAAK,EAAC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAFF,CADF,CADF,CAtDF,eAgEE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEM,OAAO,CAACf,IAAzB;AAA+B,IAAA,IAAI,MAAnC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAA2C,IAAA,EAAE,EAAE,CAA/C;AAAkD,IAAA,EAAE,EAAE,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,cAAc,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAEU,MAAlC;AAA0C,IAAA,QAAQ,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CAhEF,CADF,CAHF,eA8EE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9EF,CAJF,CADF;AAuFD,CA1FD;;GAAME,a;UACYd,S;;;KADZc,a;AA4FNA,aAAa,CAACM,SAAd,GAA0B;AACxBL,EAAAA,SAAS,EAAE5B,SAAS,CAACkC;AADG,CAA1B;AAIA,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  // CardHeader,\n  Divider,\n  Grid,\n  makeStyles,\n  // TextField,\n} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst colorIcon = {\n  background: '#DADADA',\n};\nconst ColrText = {\n  color: '#8C8C8C',\n};\n\nconst widthBigtext = {\n  width: '200px',\n};\n\nconst blackText = {\n  color: '#404040'\n};\nconst botNan = {\n  borderRadius: 'initial',\n};\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n            >\n\n              <InputBase\n                style={widthBigtext}\n                margin=\"normal\"\n                defaultValue=\"MyFirstProject\"\n                color=\"primary\"\n                inputProps={\n                    {\n                      style: {\n                        fontSize: 30\n                      }\n                    }\n                  }\n                InputLabelProps={\n                    {\n                      style: {\n                        fontSize: 30\n                      }\n                    }\n              }\n              />\n            </Grid>\n            <Grid>\n              <Box mt={4}>\n                <BorderColorIcon style={colorIcon} />\n                <DeleteIcon style={colorIcon} />\n              </Box>\n            </Grid>\n            <Grid className={classes.item} item md={9} sm={9} xs={9}>\n              <Grid item md={12} sm={12} xs={12}>\n                <Box root md={10} sm={10} xs={10}>\n                  <Typography variant=\"h6\" style={ColrText} color=\"secondary\">TODI</Typography>\n                  <Box mt={0}>\n                    <Typography variant=\"h6\" style={blackText} color=\"secondary\">No task</Typography>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid className={classes.item} item md={3} sm={3} xs={3}>\n              <Box display=\"flex\" mb={1} justifyContent=\"flex-end\">\n                <Button variant=\"outlined\" style={botNan} disabled>\n                  Clear not completed\n                </Button>\n              </Box>\n            </Grid>\n            <Grid className={classes.item} item md={9} sm={9} xs={9}>\n              <Grid>\n                <Box>\n                  <Typography variant=\"h6\" style={ColrText} color=\"secondary\">COMPLETED</Typography>\n                  <Box mt={0}>\n                    <Typography variant=\"h6\" style={blackText} color=\"secondary\">No task</Typography>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid className={classes.item} item md={3} sm={3} xs={3}>\n              <Box display=\"flex\" mb={4} justifyContent=\"flex-end\">\n                <Button variant=\"outlined\" style={botNan} disabled>\n                  Clear not completed\n                </Button>\n              </Box>\n            </Grid>\n\n          </Grid>\n        </CardContent>\n        <Divider />\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}