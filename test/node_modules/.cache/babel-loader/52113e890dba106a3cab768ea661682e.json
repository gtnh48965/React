{"ast":null,"code":"var _jsxFileName = \"/Users/peta/Documents/GitHub/material-kit-react/src/layouts/DashboardLayout/TopBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types'; // import Paper from '@material-ui/core/Paper';\n// import Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar, makeStyles } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Logo from 'src/components/Logo';\nconst margModal = {\n  marginTop: '121px'\n};\nconst Grey = {\n  color: '#8C8C8C',\n  marginRight: '30px'\n};\nconst refactoringUITwo = {\n  flexDirection: 'initial',\n  display: 'flex'\n};\nconst refactoringUI = {\n  flexDirection: 'initial',\n  display: 'flex',\n  height: '493px',\n  width: '600px',\n  position: 'relative'\n};\nconst botTask = {\n  borderRadius: 'initial',\n  backgroundColor: '#1400FD'\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nconst borderTop = {\n  border: '1px solid #E6E6E6'\n};\nconst colorGraf = {\n  backgroundColor: '#FCFCFC'\n};\n\nfunction handleClick(event) {\n  event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppBar, Object.assign({\n    className: clsx(classes.root, className),\n    elevation: 0\n  }, rest, {\n    color: \"default\",\n    boxShadow: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    theme: true,\n    style: borderTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RouterLink, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    mdDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: notifications.length,\n    color: \"primary\",\n    variant: \"dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: Grey,\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Dialog, {\n    className: classes.root,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: refactoringUI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: margModal,\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(Breadcrumbs, {\n    separator: \"\",\n    \"aria-label\": \"breadcrumb\",\n    style: refactoringUITwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: refactoringUITwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    color: \"textPrimary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"Material-UI\"), /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"Core\")))), /*#__PURE__*/React.createElement(DialogContent, {\n    style: colorGraf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    style: colorGraf,\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Agree\")))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    style: botTask,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Add new task\"), /*#__PURE__*/React.createElement(Hidden, {\n    lgUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: onMobileNavOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(TopBar, \"BV0B5JsDMI4IzHJDSqxYSfnVARM=\", false, function () {\n  return [useStyles];\n});\n\n_c = TopBar;\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\nexport default TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["/Users/peta/Documents/GitHub/material-kit-react/src/layouts/DashboardLayout/TopBar.js"],"names":["React","useState","Link","RouterLink","clsx","PropTypes","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","Breadcrumbs","AppBar","Badge","Box","Hidden","IconButton","Toolbar","makeStyles","MenuIcon","Logo","margModal","marginTop","Grey","color","marginRight","refactoringUITwo","flexDirection","display","refactoringUI","height","width","position","botTask","borderRadius","backgroundColor","useStyles","theme","root","flexGrow","avatar","paper","padding","spacing","textAlign","palette","text","secondary","borderTop","border","colorGraf","handleClick","event","preventDefault","console","info","TopBar","className","onMobileNavOpen","rest","classes","notifications","open","setOpen","handleClickOpen","handleClose","length","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import Paper from '@material-ui/core/Paper';\n// import Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Logo from 'src/components/Logo';\n\nconst margModal = {\n  marginTop: '121px',\n};\nconst Grey = {\n  color: '#8C8C8C',\n  marginRight: '30px'\n};\nconst refactoringUITwo = {\n  flexDirection: 'initial',\n  display: 'flex',\n};\nconst refactoringUI = {\n  flexDirection: 'initial',\n  display: 'flex',\n  height: '493px',\n  width: '600px',\n  position: 'relative',\n};\nconst botTask = {\n  borderRadius: 'initial',\n  backgroundColor: '#1400FD'\n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\nconst borderTop = {\n  border: '1px solid #E6E6E6'\n};\nconst colorGraf = {\n  backgroundColor: '#FCFCFC',\n};\n\nfunction handleClick(event) {\n  event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n      color=\"default\"\n      boxShadow={3}\n    >\n      <Toolbar theme style={borderTop}>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              {/* <NotificationsIcon /> */}\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\">\n            {/* <InputIcon /> */}\n          </IconButton>\n        </Hidden>\n        <Button style={Grey} onClick={handleClickOpen}>Statistics</Button>\n        <Dialog\n          className={classes.root}\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <div style={refactoringUI}>\n            <DialogTitle style={margModal} id=\"alert-dialog-title\">\n              <Typography variant=\"h1\" component=\"h2\">\n                Statistics\n              </Typography>\n              <Typography variant=\"h6\" component=\"h2\">\n                Amount\n              </Typography>\n              <Breadcrumbs separator=\"\" aria-label=\"breadcrumb\" style={refactoringUITwo}>\n                <div style={refactoringUITwo}>\n                  <Link color=\"textPrimary\" onClick={handleClick}>\n                    Material-UI\n                  </Link>\n                  <Link color=\"inherit\" onClick={handleClick}>\n                    Core\n                  </Link>\n                </div>\n              </Breadcrumbs>\n            </DialogTitle>\n            <DialogContent style={colorGraf}>\n              <DialogContentText style={colorGraf} id=\"alert-dialog-description\">\n                Let Google help apps determine location. This means sending\n                anonymous location data to\n                Google, even when no apps are running.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Disagree\n              </Button>\n              <Button onClick={handleClose} color=\"primary\" autoFocus>\n                Agree\n              </Button>\n            </DialogActions>\n          </div>\n        </Dialog>\n        <Button color=\"primary\" style={botTask} variant=\"contained\">Add new task</Button>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n"]},"metadata":{},"sourceType":"module"}